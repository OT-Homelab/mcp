services:

  # Timebase Historian Service
  timebase-historian:
    image: timebase/historian:latest                                              # Docker image for Timebase Historian with variable tag
    hostname: timebase-historian                                                  # Hostname used for internal networking
    container_name: timebase-historian                                            # Container name for easier management
    ports:
      - "4511:4511"                                                               # Map the Historian REST API port
    restart: unless-stopped                                                       # Automatically restart unless stopped manually
    environment:
      - Settings=/historian/settings                                              # Path to the settings file
      - Data=/historian/data                                                      # Path to the data directory
      - Logs=/historian/logs                                                      # Path to the logs directory
    volumes:
      - timebase_historian:/historian

  # Timebase Collector Service
  timebase-collector:
    image: timebase/collector:latest                                              # Docker image for Timebase Collector with variable tag
    hostname: timebase-collector                                                  # Hostname used for internal networking
    container_name: timebase-collector                                            # Container name for easier management
    ports:
      - "4521:4521"                                                               # Map the Collector REST API port
    restart: unless-stopped                                                       # Automatically restart unless stopped manually
    depends_on:
      - timebase-historian                                                        # Ensure this service starts after the Historian
    environment:
      - Active=false                                                              # Set the initial state of the Collector service
      - Settings=/collector/settings                                              # Path to the settings file
      - Config=/collector/config                                                  # Path to the config directory
      - Data=/collector/data                                                      # Path to the data directory
      - Logs=/collector/logs                                                      # Path to the logs directory
    volumes:
      - timebase_collector:/collector

  # Timebase Explorer Service
  timebase-explorer:
    image: timebase/explorer:latest                                               # Docker image for Timebase Explorer with variable tag
    hostname: timebase-explorer                                                   # Hostname used for internal networking
    container_name: timebase-explorer                                             # Container name for easier management
    ports:
      - "4531:4531"                                                               # Map the Explorer Web UI port
    restart: unless-stopped                                                       # Automatically restart unless stopped manually
    depends_on:
      - timebase-historian                                                        # Ensure this service starts after the Historian
    environment:
      - Settings=/explorer/settings                                               # Path to the settings file
      - Config=/explorer/config                                                   # Path to the config directory
      - Data=/explorer/data                                                       # Path to the data directory
      - Logs=/explorer/logs                                                       # Path to the logs directory
    volumes:
      - timebase_explorer:/explorer

  postgresql:
    container_name: postgres
    hostname: postgres
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_super_password
    volumes:
      - pg-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    hostname: pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin_super_password
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  emqx1:
    image: emqx/emqx:latest
    container_name: emqx1
    restart: unless-stopped    
    environment:
      - EMQX_NAME=emqx1
    ports:
      - "1884:1883"      # MQTT
      - "18083:18083"    # Dashboard
      - "8083:8083"      # WebSocket
      # - "8883:8883"      # TLS         
    volumes:
      - emqx1-data:/opt/emqx/data
      - emqx1-log:/opt/emqx/log

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_SECURE_COOKIE=false
    volumes:
      - n8n-data:/home/node/.n8n      

volumes:
  pg-data:
  pgadmin-data:
  grafana-data:
  emqx1-data:
  emqx1-log:
  n8n-data:
  timebase_historian:
  timebase_collector:
  timebase_explorer:

networks:
  default:
    name: otnetwork
